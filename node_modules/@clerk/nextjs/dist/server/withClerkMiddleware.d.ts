import type { AuthStatus, RequestState } from '@clerk/backend';
import type { NextMiddleware, NextMiddlewareResult } from 'next/dist/server/web/types';
import type { NextRequest } from 'next/server';
import { NextResponse } from 'next/server';
import type { WithAuthOptions } from './types';
interface WithClerkMiddleware {
    (handler: NextMiddleware, opts?: WithAuthOptions): NextMiddleware;
    (): NextMiddleware;
}
export declare const decorateResponseWithObservabilityHeaders: (res: NextResponse, requestState: RequestState) => void;
export declare const withClerkMiddleware: WithClerkMiddleware;
type HandleMiddlewareResultProps = {
    req: NextRequest;
    res: NextMiddlewareResult;
    authStatus: AuthStatus;
};
export declare function handleMiddlewareResult({ req, res, authStatus }: HandleMiddlewareResultProps): NextMiddlewareResult;
export {};
